{"ast":null,"code":"import _slicedToArray from\"/home/jano/calculadora-loopin/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import FormControlLabel from'@mui/material/FormControlLabel';import Switch from'@mui/material/Switch';import{numberWithDelimiter}from'../components/helpers/numberFormat';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TotalPointsContainer=function TotalPointsContainer(_ref){var totalPoints=_ref.totalPoints;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),firstWithdrawal=_useState2[0],setFirstWithdrawal=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),bonusMessage=_useState4[0],setBonusMessage=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),bonusPoints=_useState6[0],setBonusPoints=_useState6[1];var calculateBonus=function calculateBonus(){var maximumBonus=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1000;var bonusThreshold=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1000;if(totalPoints>bonusThreshold){return{message:'¡Tienes 1.000 puntos extra 🍻!',bonus:totalPoints+maximumBonus};}else{return{message:'¡Duplicas tus puntos 🎉!',bonus:totalPoints*2};}};useEffect(function(){var setBonusAlert=function setBonusAlert(){var _calculateBonus=calculateBonus(),message=_calculateBonus.message,bonus=_calculateBonus.bonus;setBonusMessage(message);setBonusPoints(bonus);};setBonusAlert();},[firstWithdrawal,totalPoints]);return/*#__PURE__*/_jsx(React.Fragment,{children:totalPoints>0&&/*#__PURE__*/_jsxs(\"section\",{className:\"total-points-container\",children:[/*#__PURE__*/_jsx(FormControlLabel,{checked:firstWithdrawal,onChange:function onChange(e){return setFirstWithdrawal(e.target.checked);},control:/*#__PURE__*/_jsx(Switch,{color:\"primary\"}),label:\"\\xBFPrimer retiro?\",labelPlacement:\"start\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Total de puntos\"}),firstWithdrawal?/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"total-points-number\",children:[/*#__PURE__*/_jsx(\"span\",{children:numberWithDelimiter(totalPoints)}),numberWithDelimiter(bonusPoints)]}),/*#__PURE__*/_jsx(\"p\",{className:\"bonus-message\",children:bonusMessage})]}):/*#__PURE__*/_jsx(\"p\",{className:\"total-points-number\",children:numberWithDelimiter(totalPoints)})]})});};export default TotalPointsContainer;","map":{"version":3,"sources":["/home/jano/calculadora-loopin/src/components/TotalPointsContainer.jsx"],"names":["React","useState","useEffect","FormControlLabel","Switch","numberWithDelimiter","TotalPointsContainer","totalPoints","firstWithdrawal","setFirstWithdrawal","bonusMessage","setBonusMessage","bonusPoints","setBonusPoints","calculateBonus","maximumBonus","bonusThreshold","message","bonus","setBonusAlert","e","target","checked"],"mappings":"mHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CAEA,OAASC,mBAAT,KAAoC,oCAApC,C,wFAEA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,MAAqB,IAAlBC,CAAAA,WAAkB,MAAlBA,WAAkB,CAChD,cAA8CN,QAAQ,CAAC,KAAD,CAAtD,wCAAOO,eAAP,eAAwBC,kBAAxB,eAEA,eAAwCR,QAAQ,EAAhD,yCAAOS,YAAP,eAAqBC,eAArB,eACA,eAAsCV,QAAQ,EAA9C,yCAAOW,WAAP,eAAoBC,cAApB,eAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAgD,IAA/CC,CAAAA,YAA+C,2DAAhC,IAAgC,IAA1BC,CAAAA,cAA0B,2DAAT,IAAS,CACrE,GAAIT,WAAW,CAAGS,cAAlB,CAAkC,CAChC,MAAO,CAACC,OAAO,CAAE,gCAAV,CAA4CC,KAAK,CAAEX,WAAW,CAAGQ,YAAjE,CAAP,CACD,CAFD,IAGK,CACH,MAAO,CAACE,OAAO,CAAE,0BAAV,CAAsCC,KAAK,CAAEX,WAAW,CAAG,CAA3D,CAAP,CACD,CACF,CAPD,CASAL,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,oBAAyBL,cAAc,EAAvC,CAAOG,OAAP,iBAAOA,OAAP,CAAgBC,KAAhB,iBAAgBA,KAAhB,CACAP,eAAe,CAACM,OAAD,CAAf,CACAJ,cAAc,CAACK,KAAD,CAAd,CACD,CAJD,CAMAC,aAAa,GAEd,CATQ,CASN,CAACX,eAAD,CAAkBD,WAAlB,CATM,CAAT,CAWA,mBACE,KAAC,KAAD,CAAO,QAAP,WAEIA,WAAW,CAAG,CAAd,eACA,iBAAS,SAAS,CAAC,wBAAnB,wBACE,KAAC,gBAAD,EACE,OAAO,CAAEC,eADX,CAEE,QAAQ,CAAE,kBAACY,CAAD,QAAOX,CAAAA,kBAAkB,CAACW,CAAC,CAACC,MAAF,CAASC,OAAV,CAAzB,EAFZ,CAGE,OAAO,cAAE,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,EAHX,CAIE,KAAK,CAAC,oBAJR,CAKE,cAAc,CAAC,OALjB,EADF,cASE,uCATF,CAYId,eAAe,cACf,MAAC,KAAD,CAAO,QAAP,yBACE,WAAG,SAAS,CAAC,qBAAb,wBACE,sBAAQH,mBAAmB,CAACE,WAAD,CAA3B,EADF,CAEIF,mBAAmB,CAACO,WAAD,CAFvB,GADF,cAKE,UAAG,SAAS,CAAC,eAAb,UACIF,YADJ,EALF,GADe,cAWf,UAAG,SAAS,CAAC,qBAAb,UACIL,mBAAmB,CAACE,WAAD,CADvB,EAvBJ,GAHJ,EADF,CAmCD,CA7DD,CA+DA,cAAeD,CAAAA,oBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\n\nimport { numberWithDelimiter } from '../components/helpers/numberFormat';\n\nconst TotalPointsContainer = ({ totalPoints }) => {\n  const [firstWithdrawal, setFirstWithdrawal] = useState(false);\n\n  const [bonusMessage, setBonusMessage] = useState();\n  const [bonusPoints, setBonusPoints] = useState();\n\n  const calculateBonus = (maximumBonus = 1000, bonusThreshold = 1000) => {\n    if (totalPoints > bonusThreshold) {\n      return {message: '¡Tienes 1.000 puntos extra 🍻!', bonus: totalPoints + maximumBonus};\n    }\n    else {\n      return {message: '¡Duplicas tus puntos 🎉!', bonus: totalPoints * 2};\n    }\n  }\n\n  useEffect(() => {\n    const setBonusAlert = () => {\n      const {message, bonus} = calculateBonus();\n      setBonusMessage(message);\n      setBonusPoints(bonus);\n    }\n\n    setBonusAlert();\n\n  }, [firstWithdrawal, totalPoints]);\n\n  return (\n    <React.Fragment>\n      {\n        totalPoints > 0 && \n        <section className=\"total-points-container\">\n          <FormControlLabel\n            checked={firstWithdrawal}\n            onChange={(e) => setFirstWithdrawal(e.target.checked)}\n            control={<Switch color=\"primary\" />}\n            label=\"¿Primer retiro?\"\n            labelPlacement=\"start\"\n          />\n\n          <h2>Total de puntos</h2>\n\n          { \n            firstWithdrawal ? \n            <React.Fragment>\n              <p className=\"total-points-number\">\n                <span>{ numberWithDelimiter(totalPoints) }</span>\n                { numberWithDelimiter(bonusPoints) }\n              </p>\n              <p className=\"bonus-message\">\n                { bonusMessage }\n              </p>\n            </React.Fragment>\n            :\n            <p className=\"total-points-number\">\n              { numberWithDelimiter(totalPoints) }\n            </p>\n          }\n        </section>\n      }\n    </React.Fragment>\n  );\n}\n\nexport default TotalPointsContainer;"]},"metadata":{},"sourceType":"module"}