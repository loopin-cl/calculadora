{"ast":null,"code":"import _slicedToArray from\"/home/jano/calculadora-loopin/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Button from'@mui/material/Button';import FormControl from'@mui/material/FormControl';import InputLabel from'@mui/material/InputLabel';import MenuItem from'@mui/material/MenuItem';import Select from'@mui/material/Select';import TextField from'@mui/material/TextField';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CalculatorForm=function CalculatorForm(_ref){var addPackage=_ref.addPackage,packageList=_ref.packageList,availableCategories=_ref.availableCategories;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),selectedPackage=_useState2[0],setSelectedPackage=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),filteredPackages=_useState4[0],setFilteredPackages=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),selectedCategory=_useState6[0],setSelectedCategory=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),quantityInput=_useState8[0],setQuantityInput=_useState8[1];useEffect(function(){var filterPackages=function filterPackages(){setFilteredPackages(packageList.filter(function(currentPackage){return currentPackage.category===selectedCategory;}));};filterPackages();},[selectedCategory]);var appendPackage=function appendPackage(){var newPackage={package:selectedPackage,quantity:quantityInput,total_points:selectedPackage.points*quantityInput};addPackage(newPackage);cleanForm();};var cleanForm=function cleanForm(){setSelectedPackage('');setFilteredPackages([]);setSelectedCategory('');setQuantityInput();};return/*#__PURE__*/_jsxs(\"section\",{className:\"form-container\",children:[/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"category-label\",children:\"Categor\\xEDa\"}),/*#__PURE__*/_jsx(Select,{labelId:\"category-label\",id:\"category\",value:selectedCategory,label:\"Age\",onChange:function onChange(e){return setSelectedCategory(e.target.value);},children:availableCategories.map(function(category){return/*#__PURE__*/_jsx(MenuItem,{value:category,children:category},category);})})]}),filteredPackages&&/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"package-list-label\",children:\"Tipo de envase\"}),/*#__PURE__*/_jsx(Select,{labelId:\"package-list-label\",id:\"package-list\",value:selectedPackage,label:\"Age\",onChange:function onChange(e){return setSelectedPackage(e.target.value);},children:filteredPackages.map(function(current_package){return/*#__PURE__*/_jsx(MenuItem,{value:current_package,children:current_package.type},current_package.type);})})]}),selectedPackage&&/*#__PURE__*/_jsx(TextField,{id:\"package-quantities\",label:\"Cantidad de envases\",variant:\"outlined\",type:\"number\",inputProps:{min:1},fullWidth:true,onChange:function onChange(e){return setQuantityInput(parseInt(e.target.value));}}),quantityInput&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:appendPackage,fullWidth:true,size:\"large\",children:\"Agregar envase\"})})]});};export default CalculatorForm;","map":{"version":3,"sources":["/home/jano/calculadora-loopin/src/components/CalculatorForm.jsx"],"names":["React","useEffect","useState","Button","FormControl","InputLabel","MenuItem","Select","TextField","CalculatorForm","addPackage","packageList","availableCategories","selectedPackage","setSelectedPackage","filteredPackages","setFilteredPackages","selectedCategory","setSelectedCategory","quantityInput","setQuantityInput","filterPackages","filter","currentPackage","category","appendPackage","newPackage","package","quantity","total_points","points","cleanForm","e","target","value","map","current_package","type","min","parseInt"],"mappings":"mHAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAsD,IAAnDC,CAAAA,UAAmD,MAAnDA,UAAmD,CAAvCC,WAAuC,MAAvCA,WAAuC,CAA1BC,mBAA0B,MAA1BA,mBAA0B,CAC3E,cAA8CV,QAAQ,CAAC,EAAD,CAAtD,wCAAOW,eAAP,eAAwBC,kBAAxB,eACA,eAAgDZ,QAAQ,CAAC,EAAD,CAAxD,yCAAOa,gBAAP,eAAyBC,mBAAzB,eACA,eAAgDd,QAAQ,CAAC,EAAD,CAAxD,yCAAOe,gBAAP,eAAyBC,mBAAzB,eACA,eAA0ChB,QAAQ,EAAlD,yCAAOiB,aAAP,eAAsBC,gBAAtB,eAEAnB,SAAS,CAAC,UAAM,CACd,GAAMoB,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3BL,mBAAmB,CAACL,WAAW,CAACW,MAAZ,CAAmB,SAAAC,cAAc,QAAIA,CAAAA,cAAc,CAACC,QAAf,GAA4BP,gBAAhC,EAAjC,CAAD,CAAnB,CACD,CAFD,CAIAI,cAAc,GACf,CANQ,CAMN,CAACJ,gBAAD,CANM,CAAT,CAQA,GAAMQ,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAMC,CAAAA,UAAU,CAAG,CACjBC,OAAO,CAAEd,eADQ,CAEjBe,QAAQ,CAAET,aAFO,CAGjBU,YAAY,CAAEhB,eAAe,CAACiB,MAAhB,CAAyBX,aAHtB,CAAnB,CAMAT,UAAU,CAACgB,UAAD,CAAV,CACAK,SAAS,GACV,CATD,CAWA,GAAMA,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBjB,kBAAkB,CAAC,EAAD,CAAlB,CACAE,mBAAmB,CAAC,EAAD,CAAnB,CACAE,mBAAmB,CAAC,EAAD,CAAnB,CACAE,gBAAgB,GACjB,CALD,CAOA,mBACE,iBAAS,SAAS,CAAC,gBAAnB,wBACE,MAAC,WAAD,EAAa,SAAS,KAAtB,wBACE,KAAC,UAAD,EAAY,EAAE,CAAC,gBAAf,0BADF,cAEE,KAAC,MAAD,EACE,OAAO,CAAC,gBADV,CAEE,EAAE,CAAC,UAFL,CAGE,KAAK,CAAEH,gBAHT,CAIE,KAAK,CAAC,KAJR,CAKE,QAAQ,CAAE,kBAAAe,CAAC,QAAId,CAAAA,mBAAmB,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAvB,EALb,UAQItB,mBAAmB,CAACuB,GAApB,CAAwB,SAACX,QAAD,qBACtB,KAAC,QAAD,EACE,KAAK,CAAEA,QADT,UAIGA,QAJH,EAEOA,QAFP,CADsB,EAAxB,CARJ,EAFF,GADF,CAwBIT,gBAAgB,eAAI,MAAC,WAAD,EAAa,SAAS,KAAtB,wBAClB,KAAC,UAAD,EAAY,EAAE,CAAC,oBAAf,4BADkB,cAElB,KAAC,MAAD,EACE,OAAO,CAAC,oBADV,CAEE,EAAE,CAAC,cAFL,CAGE,KAAK,CAAEF,eAHT,CAIE,KAAK,CAAC,KAJR,CAKE,QAAQ,CAAE,kBAAAmB,CAAC,QAAIlB,CAAAA,kBAAkB,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtB,EALb,UAQInB,gBAAgB,CAACoB,GAAjB,CAAqB,SAACC,eAAD,qBACnB,KAAC,QAAD,EACE,KAAK,CAAEA,eADT,UAIGA,eAAe,CAACC,IAJnB,EAEOD,eAAe,CAACC,IAFvB,CADmB,EAArB,CARJ,EAFkB,GAxBxB,CAgDIxB,eAAe,eACf,KAAC,SAAD,EACE,EAAE,CAAC,oBADL,CAEE,KAAK,CAAC,qBAFR,CAGE,OAAO,CAAC,UAHV,CAIE,IAAI,CAAC,QAJP,CAKE,UAAU,CAAE,CAAEyB,GAAG,CAAE,CAAP,CALd,CAME,SAAS,KANX,CAOE,QAAQ,CAAE,kBAAAN,CAAC,QAAIZ,CAAAA,gBAAgB,CAACmB,QAAQ,CAACP,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT,CAApB,EAPb,EAjDJ,CA6DIf,aAAa,eAAI,kCACf,KAAC,MAAD,EACE,OAAO,CAAC,WADV,CAEE,OAAO,CAAEM,aAFX,CAGE,SAAS,KAHX,CAIE,IAAI,CAAC,OAJP,4BADe,EA7DrB,GADF,CA2ED,CA3GD,CA6GA,cAAehB,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nconst CalculatorForm = ({ addPackage, packageList, availableCategories }) => {\n  const [selectedPackage, setSelectedPackage] = useState('');\n  const [filteredPackages, setFilteredPackages] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [quantityInput, setQuantityInput] = useState();\n\n  useEffect(() => {\n    const filterPackages = () => {\n      setFilteredPackages(packageList.filter(currentPackage => currentPackage.category === selectedCategory));\n    }\n\n    filterPackages();\n  }, [selectedCategory]);\n\n  const appendPackage = () => {\n    const newPackage = {\n      package: selectedPackage,\n      quantity: quantityInput,\n      total_points: selectedPackage.points * quantityInput\n    }\n    \n    addPackage(newPackage);\n    cleanForm();\n  }\n\n  const cleanForm = () => {\n    setSelectedPackage('');\n    setFilteredPackages([]);\n    setSelectedCategory('');\n    setQuantityInput();\n  }\n\n  return (\n    <section className=\"form-container\">\n      <FormControl fullWidth>\n        <InputLabel id=\"category-label\">Categor√≠a</InputLabel>\n        <Select\n          labelId=\"category-label\"\n          id=\"category\"\n          value={selectedCategory}\n          label=\"Age\"\n          onChange={e => setSelectedCategory(e.target.value)}\n        >\n          { \n            availableCategories.map((category) => (\n              <MenuItem \n                value={category}\n                key={category}\n              >\n                {category}\n              </MenuItem>\n            )) \n          }\n        </Select>\n      </FormControl>\n\n      {\n        filteredPackages && <FormControl fullWidth>\n          <InputLabel id=\"package-list-label\">Tipo de envase</InputLabel>\n          <Select\n            labelId=\"package-list-label\"\n            id=\"package-list\"\n            value={selectedPackage}\n            label=\"Age\"\n            onChange={e => setSelectedPackage(e.target.value)}\n          >\n            { \n              filteredPackages.map((current_package) => (\n                <MenuItem \n                  value={current_package}\n                  key={current_package.type}\n                >\n                  {current_package.type}\n                </MenuItem>\n              )) \n            }\n          </Select>\n        </FormControl>\n      }\n\n      {\n        selectedPackage && \n        <TextField \n          id=\"package-quantities\" \n          label=\"Cantidad de envases\" \n          variant=\"outlined\" \n          type=\"number\"\n          inputProps={{ min: 1 }} \n          fullWidth\n          onChange={e => setQuantityInput(parseInt(e.target.value))}\n        />\n      }\n\n      {\n        quantityInput && <div>\n          <Button \n            variant=\"contained\"\n            onClick={appendPackage}\n            fullWidth\n            size=\"large\"\n          >\n            Agregar envase\n          </Button>\n        </div>\n      }\n    </section>\n  );\n}\n\nexport default CalculatorForm;"]},"metadata":{},"sourceType":"module"}