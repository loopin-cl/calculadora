{"version":3,"sources":["components/CalculatorForm.jsx","components/helpers/numberFormat.jsx","components/DetailedTable.jsx","components/TotalPointsContainer.jsx","components/Calculator.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["CalculatorForm","addPackage","packageList","availableCategories","useState","selectedPackage","setSelectedPackage","filteredPackages","setFilteredPackages","selectedCategory","setSelectedCategory","quantityInput","setQuantityInput","useEffect","filter","currentPackage","category","cleanForm","className","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","e","target","map","MenuItem","current_package","type","TextField","variant","inputProps","min","parseInt","Button","onClick","newPackage","package","quantity","total_points","points","size","numberWithDelimiter","number","Intl","NumberFormat","format","replace","DetailedTable","addedPackages","removeSelected","TableContainer","length","Table","TableHead","TableRow","TableCell","component","align","TableBody","Chip","toLowerCase","TotalPointsContainer","totalPoints","firstWithdrawal","setFirstWithdrawal","bonusMessage","setBonusMessage","bonusPoints","setBonusPoints","maximumBonus","message","bonus","calculateBonus","setBonusAlert","Fragment","FormControlLabel","checked","control","Switch","color","labelPlacement","Calculator","setPackageList","setAvailableCategories","setAddedPackages","Container","Box","packageToRestore","reduce","accum","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1bab2be.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport Button from '@mui/material/Button';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\n\nconst CalculatorForm = ({ addPackage, packageList, availableCategories }) => {\n  const [selectedPackage, setSelectedPackage] = useState('');\n  const [filteredPackages, setFilteredPackages] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('');\n  const [quantityInput, setQuantityInput] = useState();\n\n  useEffect(() => {\n    const filterPackages = () => {\n      setFilteredPackages(packageList.filter(currentPackage => currentPackage.category === selectedCategory));\n    }\n\n    filterPackages();\n  }, [selectedCategory]);\n\n  const appendPackage = () => {\n    const newPackage = {\n      package: selectedPackage,\n      quantity: quantityInput,\n      total_points: selectedPackage.points * quantityInput\n    }\n    \n    addPackage(newPackage);\n    cleanForm();\n  }\n\n  const cleanForm = () => {\n    setSelectedPackage('');\n    setFilteredPackages([]);\n    setSelectedCategory('');\n    setQuantityInput();\n  }\n\n  return (\n    <section className=\"form-container\">\n      <FormControl fullWidth>\n        <InputLabel id=\"category-label\">Categor√≠a</InputLabel>\n        <Select\n          labelId=\"category-label\"\n          id=\"category\"\n          value={selectedCategory}\n          label=\"Age\"\n          onChange={e => setSelectedCategory(e.target.value)}\n        >\n          { \n            availableCategories.map((category) => (\n              <MenuItem \n                value={category}\n                key={category}\n              >\n                {category}\n              </MenuItem>\n            )) \n          }\n        </Select>\n      </FormControl>\n\n      {\n        filteredPackages && <FormControl fullWidth>\n          <InputLabel id=\"package-list-label\">Tipo de envase</InputLabel>\n          <Select\n            labelId=\"package-list-label\"\n            id=\"package-list\"\n            value={selectedPackage}\n            label=\"Age\"\n            onChange={e => setSelectedPackage(e.target.value)}\n          >\n            { \n              filteredPackages.map((current_package) => (\n                <MenuItem \n                  value={current_package}\n                  key={current_package.type}\n                >\n                  {current_package.type}\n                </MenuItem>\n              )) \n            }\n          </Select>\n        </FormControl>\n      }\n\n      {\n        selectedPackage && \n        <TextField \n          id=\"package-quantities\" \n          label=\"Cantidad de envases\" \n          variant=\"outlined\" \n          type=\"number\"\n          inputProps={{ min: 1 }} \n          fullWidth\n          onChange={e => setQuantityInput(parseInt(e.target.value))}\n        />\n      }\n\n      {\n        quantityInput && <div>\n          <Button \n            variant=\"contained\"\n            onClick={appendPackage}\n            fullWidth\n            size=\"large\"\n          >\n            Agregar envase\n          </Button>\n        </div>\n      }\n    </section>\n  );\n}\n\nexport default CalculatorForm;","export const numberWithDelimiter = (number) => {\n  return new Intl.NumberFormat('es-ES').format(number).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n}","import React from 'react';\n\nimport Chip from '@mui/material/Chip';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nimport { XCircle } from 'react-feather';\n\nimport { numberWithDelimiter } from '../components/helpers/numberFormat';\n\nconst DetailedTable = ({ addedPackages, removeSelected }) => {\n\n  return (\n    <TableContainer>\n      {\n        addedPackages.length > 0 && <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell component=\"th\">Envase</TableCell>\n              <TableCell component=\"th\" align=\"right\">Cantidad</TableCell>\n              <TableCell component=\"th\" align=\"right\">Puntos</TableCell>\n              <TableCell />\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {\n              addedPackages.map(currentPackage => (\n                <TableRow \n                  key={currentPackage.package.id}\n                >\n                  <TableCell  align=\"left\">\n                    <Chip \n                      label={currentPackage.package.category}\n                      size=\"small\"\n                      className={`chip-${currentPackage.package.category.toLowerCase()}`}\n                    />\n                    <p className=\"package-type\">\n                      { currentPackage.package.type }\n                    </p>\n                  </TableCell>\n                  <TableCell align=\"right\">{currentPackage.quantity}</TableCell>\n                  <TableCell align=\"right\">\n                    { numberWithDelimiter(currentPackage.total_points) }\n                  </TableCell>\n                  <TableCell>\n                    <XCircle\n                      className=\"clickeable-icon\"\n                      onClick={() => removeSelected(currentPackage.package)}\n                    />\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </TableBody>\n        </Table>\n      }\n    </TableContainer>\n  );\n}\n\nexport default DetailedTable;","import React, { useState, useEffect } from 'react';\n\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\n\nimport { numberWithDelimiter } from '../components/helpers/numberFormat';\n\nconst TotalPointsContainer = ({ totalPoints }) => {\n  const [firstWithdrawal, setFirstWithdrawal] = useState(false);\n\n  const [bonusMessage, setBonusMessage] = useState();\n  const [bonusPoints, setBonusPoints] = useState();\n\n  const calculateBonus = (maximumBonus = 1000, bonusThreshold = 1000) => {\n    if (totalPoints > bonusThreshold) {\n      return {message: '¬°Tienes 1.000 puntos extra üçª!', bonus: totalPoints + maximumBonus};\n    }\n    else {\n      return {message: '¬°Duplicas tus puntos üéâ!', bonus: totalPoints * 2};\n    }\n  }\n\n  useEffect(() => {\n    const setBonusAlert = () => {\n      const {message, bonus} = calculateBonus();\n      setBonusMessage(message);\n      setBonusPoints(bonus);\n    }\n\n    setBonusAlert();\n\n  }, [firstWithdrawal, totalPoints]);\n\n  return (\n    <React.Fragment>\n      {\n        totalPoints > 0 && \n        <section className=\"total-points-container\">\n          <FormControlLabel\n            checked={firstWithdrawal}\n            onChange={(e) => setFirstWithdrawal(e.target.checked)}\n            control={<Switch color=\"primary\" />}\n            label=\"¬øPrimer retiro?\"\n            labelPlacement=\"start\"\n          />\n\n          <h2>Total de puntos</h2>\n\n          { \n            firstWithdrawal ? \n            <React.Fragment>\n              <p className=\"total-points-number\">\n                <span>{ numberWithDelimiter(totalPoints) }</span>\n                { numberWithDelimiter(bonusPoints) }\n              </p>\n              <p className=\"bonus-message\">\n                { bonusMessage }\n              </p>\n            </React.Fragment>\n            :\n            <p className=\"total-points-number\">\n              { numberWithDelimiter(totalPoints) }\n            </p>\n          }\n        </section>\n      }\n    </React.Fragment>\n  );\n}\n\nexport default TotalPointsContainer;","import React, { useEffect, useState } from 'react';\n\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nimport CalculatorForm from '../components/CalculatorForm'\nimport DetailedTable from '../components/DetailedTable'\nimport TotalPointsContainer from '../components/TotalPointsContainer'\n\n\nconst Calculator = () => {\n  const [packageList, setPackageList] = useState([]);\n  const [availableCategories, setAvailableCategories] = useState([]);\n\n  const [addedPackages, setAddedPackages] = useState([]);\n\n  useEffect(() => {\n    const loadPackageList = () => {\n      setPackageList([\n        {id: 1, category: 'Cervezas', type: 'Botella 330cc', points: 20},\n        {id: 2, category: 'Cervezas', type: 'Botella 500cc', points: 30},\n        {id: 3, category: 'Cervezas', type: 'Botella 710cc', points: 40},\n        {id: 4, category: 'Licores', type: 'Botella Vidrio 275cc', points: 20},\n        {id: 5, category: 'Licores', type: 'Botella Pisco 700cc o 750cc', points: 50},\n        {id: 6, category: 'Licores', type: 'Botella Aperitivo 700cc o 750cc', points: 60},\n        {id: 7, category: 'Licores', type: 'Botella Ron 700cc o 750cc', points: 60},\n        {id: 8, category: 'Licores', type: 'Botella Vodka 750cc', points: 70},\n        {id: 9, category: 'Licores', type: 'Botella Baileys 750cc', points: 70},\n        {id: 10, category: 'Licores', type: 'Botella Tequila 750cc', points: 70},\n        {id: 11, category: 'Licores', type: 'Botella Gin 700cc o 750cc', points: 100},\n        {id: 12, category: 'Licores', type: 'Botella Whisky 700cc o 750cc', points: 100},\n        {id: 25, category: 'Vinos', type: 'Botella 375cc', points: 30},\n        {id: 26, category: 'Vinos', type: 'Botella 500cc', points: 40},\n        {id: 13, category: 'Vinos', type: 'Botella 750cc', points: 50},\n        {id: 14, category: 'Vinos', type: 'Espumante 750cc', points: 50},\n        {id: 15, category: 'Vinos', type: 'Botell√≥n 1,5 Litros', points: 70},\n        {id: 16, category: 'Jugos', type: 'Botella vidrio 200cc o 250cc', points: 20},\n        {id: 17, category: 'Jugos', type: 'Botella vidrio 300cc o 350cc', points: 30},\n        {id: 18, category: 'Jugos', type: 'Botella vidrio 475cc o 500cc', points: 40},\n        {id: 19, category: 'Jugos', type: 'Botella vidrio 1 Litro', points: 60},\n        {id: 20, category: 'Aguas', type: 'Botella vidrio 200cc o 250cc', points: 20},\n        {id: 21, category: 'Aguas', type: 'Botella vidrio 300cc o 350cc', points: 30},\n        {id: 22, category: 'Aguas', type: 'Botella vidrio 475cc o 500cc', points: 40},\n        {id: 23, category: 'Otros', type: 'Sidra 275cc o 330cc', points: 20},\n        {id: 24, category: 'Otros', type: 'T√≥nica 200cc', points: 20},\n      ]);\n    }\n\n    const loadAvailableCategories = () => {\n      setAvailableCategories([\n        'Cervezas',\n        'Licores',\n        'Vinos',\n        'Jugos',\n        'Aguas',\n        'Otros'\n      ]);\n    }\n\n    loadPackageList();\n    loadAvailableCategories();\n  }, []);\n\n  const addPackage = (newPackage) => {\n    setAddedPackages([...addedPackages, newPackage]);\n    const {id} = newPackage.package;\n    setPackageList(packageList.filter(currentPackage => currentPackage.id !== id));\n  }\n\n  const removeSelected = (packageToRestore) => {\n    setAddedPackages(addedPackages.filter(currentPackage => currentPackage.package.id !== packageToRestore.id));\n    setPackageList([...packageList, packageToRestore]);\n  }\n\n  return (\n    <Container component=\"main\" className=\"calculator-container\">\n      <Box>\n        <h1>Calculadora Loopin</h1>\n\n        <CalculatorForm \n          addPackage={ addPackage } \n          packageList={ packageList }\n          availableCategories={ availableCategories }\n        />\n\n        <DetailedTable\n          addedPackages={addedPackages}\n          removeSelected={removeSelected}\n        />\n\n        <TotalPointsContainer\n          totalPoints={addedPackages.reduce((accum, currentPackage) => accum + currentPackage.total_points, 0)}\n        />\n        \n      </Box>\n    </Container>\n  );\n}\n\nexport default Calculator;","import Calculator from './components/Calculator'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}